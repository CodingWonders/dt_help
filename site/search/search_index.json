{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to DISMTools The free and open-source GUI for DISM operations. MKDocs stuff For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-dismtools","text":"The free and open-source GUI for DISM operations.","title":"Welcome to DISMTools"},{"location":"#mkdocs-stuff","text":"For full documentation visit mkdocs.org .","title":"MKDocs stuff"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"download/","text":"Download DISMTools There are 2 release channels of DISMTools: Stable releases, which do not contain all new features, but promise stability and reliability Preview releases, which contain the latest features, but might be buggier and less stable The latest versions of such channels are: Version 0.2.2 Update 2 (ALPHA) (updated on 04/12/2023) Version 0.3 Preview 16 (BETA, RC2) (updated on 07/16/2023) Windows 7/Server 2008 R2 support notice If you are still using Windows 7 or Windows Server 2008 R2 , the last version that supports these platforms is DISMTools 0.2 . We don't recommend sticking with these old releases, as they don't contain all features and bugfixes of the latest version, and thus we recommend upgrading your systems to the latest Windows versions. Refer to the system requirements page in the Getting started section for more information.","title":"Downloads"},{"location":"download/#download-dismtools","text":"There are 2 release channels of DISMTools: Stable releases, which do not contain all new features, but promise stability and reliability Preview releases, which contain the latest features, but might be buggier and less stable The latest versions of such channels are: Version 0.2.2 Update 2 (ALPHA) (updated on 04/12/2023) Version 0.3 Preview 16 (BETA, RC2) (updated on 07/16/2023)","title":"Download DISMTools"},{"location":"download/#windows-7server-2008-r2-support-notice","text":"If you are still using Windows 7 or Windows Server 2008 R2 , the last version that supports these platforms is DISMTools 0.2 . We don't recommend sticking with these old releases, as they don't contain all features and bugfixes of the latest version, and thus we recommend upgrading your systems to the latest Windows versions. Refer to the system requirements page in the Getting started section for more information.","title":"Windows 7/Server 2008 R2 support notice"},{"location":"getting_started/new_to_servicing/","text":"Getting started with Windows servicing Context In 2007, Microsoft introduced Windows Vista, which would make lots of changes to the way it would be deployed to systems. The Windows Imaging format (WIM for short) made installation and management faster and easier, since WIM files would contain an entire Windows installation; as opposed to the old method of copying files from installation media. With Windows Vista, Microsoft also introduced the Automated Installation Kit (AIK), which contains the deployment tools necessary for that operating system. Tools, such as ImageX (deploys images), Package Manager (deploys packages), IntlCfg (configures regional settings) or more; were included with this kit. However, Microsoft wanted to create a solution that would streamline the deployment process. Their answer was the Deployment Image Servicing and Management (DISM) tool, which does every action performed by the aforementioned utilities in a single command-line program. DISM was released alongside Windows 7, and has been improved since; with the addition of the API and PowerShell cmdlets and more. Nowadays, if you want to administer Windows images, DISM is one tool to master. Interfaces A couple of DISM graphical user interfaces have been developed to simplify tasks with DISM. The most well-known tool is NTLite , which allows you to integrate packages, features and updates; and allows for unattended installations Useful resources","title":"Getting started with Windows servicing"},{"location":"getting_started/new_to_servicing/#getting-started-with-windows-servicing","text":"","title":"Getting started with Windows servicing"},{"location":"getting_started/new_to_servicing/#context","text":"In 2007, Microsoft introduced Windows Vista, which would make lots of changes to the way it would be deployed to systems. The Windows Imaging format (WIM for short) made installation and management faster and easier, since WIM files would contain an entire Windows installation; as opposed to the old method of copying files from installation media. With Windows Vista, Microsoft also introduced the Automated Installation Kit (AIK), which contains the deployment tools necessary for that operating system. Tools, such as ImageX (deploys images), Package Manager (deploys packages), IntlCfg (configures regional settings) or more; were included with this kit. However, Microsoft wanted to create a solution that would streamline the deployment process. Their answer was the Deployment Image Servicing and Management (DISM) tool, which does every action performed by the aforementioned utilities in a single command-line program. DISM was released alongside Windows 7, and has been improved since; with the addition of the API and PowerShell cmdlets and more. Nowadays, if you want to administer Windows images, DISM is one tool to master.","title":"Context"},{"location":"getting_started/new_to_servicing/#interfaces","text":"A couple of DISM graphical user interfaces have been developed to simplify tasks with DISM. The most well-known tool is NTLite , which allows you to integrate packages, features and updates; and allows for unattended installations","title":"Interfaces"},{"location":"getting_started/new_to_servicing/#useful-resources","text":"","title":"Useful resources"},{"location":"getting_started/start/","text":"Getting started If you don't know anything about Windows servicing, or come from other servicing tools, click on a section below to know what's different in this utility: Getting started with Windows servicing I come from other tools Coming from NTLite Coming from MSMG Toolkit If you want to know about something else, keep on reading. Downloading and installing DISMTools System requirements Before installing DISMTools, you need to know what hardware and software configuration you have, which you can determine in a couple of ways: Open the \"System\" control panel, by pressing Win + R , and typing control system (Windows Vista - Windows 8.1), or by typing ms-settings:about (Windows 10 and later). You should see windows like these: System control panel in Windows 7 About window in the Settings app Use the System Information ( msinfo32 ) program and refer to the \"Processor\" and \"Installed physical memory\" sections. You should see a window similar to this: Use the systeminfo command, which you can launch from the Command Prompt, and refer to the \"Processor(s)\" and \"Physical memory\" sections Open the \"Performance\" section in Task Manager (Windows 8 or newer) Once you've obtained the necessary information, compare it with the table below: Field Minimum Recommended Processor Any modern CPU with 2 cores Any modern CPU with 4 or more cores System architecture \u00b9 32-bit architecture 64-bit architecture Memory 1 GB \u2265 2 GB Operating system \u00b2 \u00b3 Windows 8.1 (Client, any edition) Windows Server 2012 (Server, any edition) Windows 10 or later (Client, any edition) Windows Server 2016 or later (Server, any edition) Additional required software: .NET Framework 4.8 ( Developer Pack , if you want to contribute to the project) PowerShell 5.0 or newer (you can detect the PowerShell version by opening PowerShell and typing $PSVersionTable.PSVersion ) Optional software requirements: Windows ADK (Assessment and Deployment Kit) Proceeding with the download If you meet at least the minimum requirements, you are good to go. Go to one of the 2 links in the Downloads section. With DISMTools 0.3 we ship 2 versions: a portable version ( DISMTools.zip ), and an installer ( dt_setup.exe ). If you plan on carrying an installation of DISMTools with you and using it on any supported device, download the portable version. Otherwise, download the installer. If you downloaded the installer, follow each screen and click Next. In this case, we guarantee security and trust by not adding any screens with malicious offers \u2074 . If you downloaded the portable installation, extract the files using 7-Zip. After installation After installation has completed, you can run the program. The following steps are recommended to be done in order to get started Creating your first project With the program up and running, you'll begin by creating a project . Use the first link in the main screen, or go to File -> New project... You'll see the following screen, in which you need to provide a name and a location. After providing data on both fields, click OK. The project will be created and you'll be at the project screen. To load this project later, go to \"Open an existing project...\" and specify the project location. NOTE: in the future, a Recents list will be implemented Loading a Windows image The first thing you need to do after creating a project is to load an image to it. There are 2 ways to do this: Mounting a Windows image To mount a Windows image, either click the \"Mount image...\" button, or click the link in the left panel. You'll see this screen: Specify the source image file you want to mount and the path you want to mount the image to. You can also configure more settings from this dialog, if you wish. Follow the image mount guide for more information. INFO: the easiest way of getting a Windows image is by extracting the sources\\install.wim file from Windows installation media. This can be easily done by mounting the ISO in the File Explorer or by using 3rd party tools, like 7-Zip. Once you're done, click OK and wait for the image to be mounted. Finally, you have finished! Loading an already existing mount directory Since DISMTools 0.2, the program lets you load a mount directory and use it in your project if you've already mounted a Windows image to it. To do this, switch to the \"Image\" tab on the left and click the link on the bottom. Next, specify the mount directory and click OK. That's it! Best practices When creating a project and/or managing Windows images, consider these best practices: Project paths Store your project on a location whose length is not greater than the MAX_PATH path length limitation (260 characters) A great place to store your project on would be at the root of your preferred drive, or in a folder 1 level deep. Such examples would be: D:\\ or E:\\Projects\\ You can disable this limitation if you're using Windows 10, version 1607 or later, by following these guides DISM operations An antivirus program may prevent you from doing an image task, so it's recommended to set an exclusion to the mount path of the image It's not recommended to mount more than 20 images at the same time, as it can cause significant performance degradation You must run this program and, at any time, DISM as an administrator, no matter what privileges you may have If you have mounted the image with write privileges enabled, it's best to commit your changes often. That way, if the image becomes corrupt, it's easier to recover it It's not recommended to store files on network shares, as it can be faster to perform most operations if the files are copied to a local disk Servicing from Windows PE Notes \u00b9 This program is not fully optimized for ARM processors \u00b2 The last version to support Windows 7 and Server 2008 R2 is DISMTools 0.2, released on 31 January 2023. Read the support notice in the aforementioned Downloads section for more information \u00b3 If you were wondering, this program is not compatible with ReactOS or Wine \u2074 We guarantee security and trust with the installer, as long as it's downloaded from the official repository . If you downloaded the program from an external site, you need to be careful, as the distributor could have added malicious offers. In that case, it's best to read the screens .","title":"Getting started"},{"location":"getting_started/start/#getting-started","text":"If you don't know anything about Windows servicing, or come from other servicing tools, click on a section below to know what's different in this utility: Getting started with Windows servicing I come from other tools Coming from NTLite Coming from MSMG Toolkit If you want to know about something else, keep on reading.","title":"Getting started"},{"location":"getting_started/start/#downloading-and-installing-dismtools","text":"","title":"Downloading and installing DISMTools"},{"location":"getting_started/start/#system-requirements","text":"Before installing DISMTools, you need to know what hardware and software configuration you have, which you can determine in a couple of ways: Open the \"System\" control panel, by pressing Win + R , and typing control system (Windows Vista - Windows 8.1), or by typing ms-settings:about (Windows 10 and later). You should see windows like these: System control panel in Windows 7 About window in the Settings app Use the System Information ( msinfo32 ) program and refer to the \"Processor\" and \"Installed physical memory\" sections. You should see a window similar to this: Use the systeminfo command, which you can launch from the Command Prompt, and refer to the \"Processor(s)\" and \"Physical memory\" sections Open the \"Performance\" section in Task Manager (Windows 8 or newer) Once you've obtained the necessary information, compare it with the table below: Field Minimum Recommended Processor Any modern CPU with 2 cores Any modern CPU with 4 or more cores System architecture \u00b9 32-bit architecture 64-bit architecture Memory 1 GB \u2265 2 GB Operating system \u00b2 \u00b3 Windows 8.1 (Client, any edition) Windows Server 2012 (Server, any edition) Windows 10 or later (Client, any edition) Windows Server 2016 or later (Server, any edition) Additional required software: .NET Framework 4.8 ( Developer Pack , if you want to contribute to the project) PowerShell 5.0 or newer (you can detect the PowerShell version by opening PowerShell and typing $PSVersionTable.PSVersion ) Optional software requirements: Windows ADK (Assessment and Deployment Kit)","title":"System requirements"},{"location":"getting_started/start/#proceeding-with-the-download","text":"If you meet at least the minimum requirements, you are good to go. Go to one of the 2 links in the Downloads section. With DISMTools 0.3 we ship 2 versions: a portable version ( DISMTools.zip ), and an installer ( dt_setup.exe ). If you plan on carrying an installation of DISMTools with you and using it on any supported device, download the portable version. Otherwise, download the installer. If you downloaded the installer, follow each screen and click Next. In this case, we guarantee security and trust by not adding any screens with malicious offers \u2074 . If you downloaded the portable installation, extract the files using 7-Zip.","title":"Proceeding with the download"},{"location":"getting_started/start/#after-installation","text":"After installation has completed, you can run the program. The following steps are recommended to be done in order to get started","title":"After installation"},{"location":"getting_started/start/#creating-your-first-project","text":"With the program up and running, you'll begin by creating a project . Use the first link in the main screen, or go to File -> New project... You'll see the following screen, in which you need to provide a name and a location. After providing data on both fields, click OK. The project will be created and you'll be at the project screen. To load this project later, go to \"Open an existing project...\" and specify the project location. NOTE: in the future, a Recents list will be implemented","title":"Creating your first project"},{"location":"getting_started/start/#loading-a-windows-image","text":"The first thing you need to do after creating a project is to load an image to it. There are 2 ways to do this:","title":"Loading a Windows image"},{"location":"getting_started/start/#mounting-a-windows-image","text":"To mount a Windows image, either click the \"Mount image...\" button, or click the link in the left panel. You'll see this screen: Specify the source image file you want to mount and the path you want to mount the image to. You can also configure more settings from this dialog, if you wish. Follow the image mount guide for more information. INFO: the easiest way of getting a Windows image is by extracting the sources\\install.wim file from Windows installation media. This can be easily done by mounting the ISO in the File Explorer or by using 3rd party tools, like 7-Zip. Once you're done, click OK and wait for the image to be mounted. Finally, you have finished!","title":"Mounting a Windows image"},{"location":"getting_started/start/#loading-an-already-existing-mount-directory","text":"Since DISMTools 0.2, the program lets you load a mount directory and use it in your project if you've already mounted a Windows image to it. To do this, switch to the \"Image\" tab on the left and click the link on the bottom. Next, specify the mount directory and click OK. That's it!","title":"Loading an already existing mount directory"},{"location":"getting_started/start/#best-practices","text":"When creating a project and/or managing Windows images, consider these best practices:","title":"Best practices"},{"location":"getting_started/start/#project-paths","text":"Store your project on a location whose length is not greater than the MAX_PATH path length limitation (260 characters) A great place to store your project on would be at the root of your preferred drive, or in a folder 1 level deep. Such examples would be: D:\\ or E:\\Projects\\ You can disable this limitation if you're using Windows 10, version 1607 or later, by following these guides","title":"Project paths"},{"location":"getting_started/start/#dism-operations","text":"An antivirus program may prevent you from doing an image task, so it's recommended to set an exclusion to the mount path of the image It's not recommended to mount more than 20 images at the same time, as it can cause significant performance degradation You must run this program and, at any time, DISM as an administrator, no matter what privileges you may have If you have mounted the image with write privileges enabled, it's best to commit your changes often. That way, if the image becomes corrupt, it's easier to recover it It's not recommended to store files on network shares, as it can be faster to perform most operations if the files are copied to a local disk","title":"DISM operations"},{"location":"getting_started/start/#servicing-from-windows-pe","text":"","title":"Servicing from Windows PE"},{"location":"getting_started/start/#notes","text":"\u00b9 This program is not fully optimized for ARM processors \u00b2 The last version to support Windows 7 and Server 2008 R2 is DISMTools 0.2, released on 31 January 2023. Read the support notice in the aforementioned Downloads section for more information \u00b3 If you were wondering, this program is not compatible with ReactOS or Wine \u2074 We guarantee security and trust with the installer, as long as it's downloaded from the official repository . If you downloaded the program from an external site, you need to be careful, as the distributor could have added malicious offers. In that case, it's best to read the screens .","title":"Notes"},{"location":"img_tasks/img_tasks/","text":"Image tasks With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image. Where do I find the tasks? Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information.","title":"Image tasks"},{"location":"img_tasks/img_tasks/#image-tasks","text":"With DISMTools you can perform a variety of tasks, which are organized depending on what action they perform to an image.","title":"Image tasks"},{"location":"img_tasks/img_tasks/#where-do-i-find-the-tasks","text":"Every task can be accessed from the \"Commands\" menu. You also have access to the most essential tasks in the center of the screen. Do note that these options become accessible when you create a project and mount an image to it. To do those actions, follow the Getting started guide for more information.","title":"Where do I find the tasks?"}]}